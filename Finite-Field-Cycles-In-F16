def circularly_identical(list1, list2):
    list3 = list1 + list1
    for i in range(0, len(list1)):
        k = 0
        for j in range(i, i + len(list1)):
            if list2[k] == list3[j]:
                k = k + 1
            else:
                break
        if k == len(list1):
            return True
    return False

def powerof(somefield, element):
    for i in range(0, len(somefield)):
        if t^i == element:
            return i
            break

def sortK(elements):
    reductions = {}
    powers = []
    for e in elements:
        powers.append(powerof(K, e))
    powers = sorted(powers)
    orderedelements = [t^power for power in powers]
    return orderedelements

def dotproduct(a, b):
    summands = []
    for i in range(0, len(a)):
        product = a[i]*b[i]
        summands.append(product)
    return sum(summands)

def sequence_in(somelist, sequence):
    check = False
    for i in somelist:
        if circularly_identical(sequence, i):
            check = True
            break
    return check

#Finding all bases of finite field K
p = 2
k = 4
q = p^k
K.<t> = GF(q, modulus = x^4 + x + 1)
M = MatrixSpace(K, k, k)
bases = []
for a in K:
    for b in K:
        for c in K:
            for d in K:
                basis = [a, b, c, d]
                c1 = [a^(p^i) for i in range(0, k)]
                c2 = [b^(p^i) for i in range(0, k)]
                c3 = [c^(p^i) for i in range(0, k)]
                c4 = [d^(p^i) for i in range(0, k)]
                A = M.matrix([c1, c2, c3, c4])
                A = A.transpose()
                if A.is_invertible():
                    if not basis in bases:
                        bases.append(basis)
print("There are", len(bases), "unique bases in", K)

#Finding the unique sequences generated by bases
base_sequence = [(0, 0, 0, 1),
               (0, 0, 0, 0),
               (1, 1, 1, 1),
               (1, 1, 1, 0),
               (1, 1, 0, 1),
               (1, 1, 0, 0),
               (1, 0, 1, 1),
               (1, 0, 1, 0),
               (1, 0, 0, 1),
               (1, 0, 0, 0),
               (0, 1, 1, 1),
               (0, 1, 1, 0),
               (0, 1, 0, 1),
               (0, 1, 0, 0),
               (0, 0, 1, 1),
               (0, 0, 1, 0)
               ]
sequences = []
for basis in bases[19500:]:
    sequence = []
    for i in base_sequence:
        new_entry = dotproduct(i, basis)
        sequence.append(new_entry)
    cleanedsequence = list(dict.fromkeys(sequence))
    if cleanedsequence == sequence:
        if not sequence_in(sequences, sequence):
            sequences.append(sequence)
print("There are", len(sequences), "unique sequences")
